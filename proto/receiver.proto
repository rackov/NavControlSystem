syntax = "proto3";

package proto;

option go_package = "NavControlSystem/proto";

// Импортируем общие определения и стандартные типы
import "service.proto";
import "google/protobuf/wrappers.proto"; // <-- ИМПОРТ ДЛЯ Int32Value

// Сервис управления RECEIVER'ом
service ReceiverControl {
  // Устанавливаем уровень логирования, используя общий запрос/ответ
  rpc SetLogLevel(proto.SetLogLevelRequest) returns (proto.SetLogLevelResponse);

  // Получить статус сервиса
  rpc GetStatus(GetStatusRequest) returns (GetStatusResponse);

  // Получить количество активных подключений
  rpc GetActiveConnectionsCount(GetClientsRequest) returns (google.protobuf.Int32Value);

  // Получить список подключенных клиентов
  rpc GetConnectedClients(GetClientsRequest) returns (GetClientsResponse);

  // Отключить клиента
  rpc DisconnectClient(DisconnectClientRequest) returns (DisconnectClientResponse);
}

// --- УДАЛЯЕМ ДУБЛИРУЮЩИЕСЯ СООБЩЕНИЯ ---
// message SetLogLevelRequest { ... } // УДАЛЕНО
// message SetLogLevelResponse { ... } // УДАЛЕНО

// --- Оставляем уникальные для этого сервиса сообщения ---

message GetStatusRequest {}

message GetStatusResponse {
  bool nats_connected = 1;
  repeated PortStatus ports = 2;
}

message PortStatus {
  string name = 1;
  int32 port = 2;
  bool is_open = 3;
}

message GetClientsRequest {
  string protocol_name = 1;
}

message ClientInfo {
  string id = 1;
  string address = 2;
  int64 connected_since = 3;
}

message GetClientsResponse {
  repeated ClientInfo clients = 1;
}

message DisconnectClientRequest {
  string protocol_name = 1;
  string client_address = 2;
}

message DisconnectClientResponse {
  bool success = 1;
}
