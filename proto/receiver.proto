// Синтаксис Protocol Buffers v3
syntax = "proto3";

// Пакет для Go
package receiver;
option go_package = "github.com/rackov/NavControlSystem/proto";

// Импортируем общие структуры
import "google/protobuf/empty.proto";

// Сервис для управления портами приемника данных
service ReceiverService {
  // Создает новый порт с конфигурацией, но не открывает его.
  rpc CreatePort(CreatePortRequest) returns (PortResponse);
  // Удаляет порт. Если он был открыт, он будет закрыт.
  rpc DeletePort(DeletePortRequest) returns (google.protobuf.Empty);
  // Открывает ранее созданный порт для приема данных.
  rpc OpenPort(OpenPortRequest) returns (PortResponse);
  // Закрывает открытый порт, отключая всех клиентов.
  rpc ClosePort(ClosePortRequest) returns (PortResponse);
  // Возвращает список всех сконфигурированных портов и их статус.
  rpc ListPorts(google.protobuf.Empty) returns (ListPortsResponse);
}

// Запрос на создание порта
message CreatePortRequest {
  uint32 port_number = 1;          // Номер TCP порта для прослушивания
  string protocol = 2;             // Протокол (ARNAVI, EGTS, NDTP)
  string nats_topic = 3;           // Топик NATS для публикации данных
}

// Запрос на удаление порта
message DeletePortRequest {
  uint32 port_number = 1;
}

// Запрос на открытие порта
message OpenPortRequest {
  uint32 port_number = 1;
}

// Запрос на закрытие порта
message ClosePortRequest {
  uint32 port_number = 1;
}

// Ответ с информацией о порте
message PortResponse {
  uint32 port_number = 1;
  string protocol = 2;
  string nats_topic = 3;
  string status = 4; // CREATED, OPEN, CLOSED, ERROR
  string message = 5; // Дополнительное сообщение (например, об ошибке)
}

// Ответ со списком портов
message ListPortsResponse {
  repeated PortResponse ports = 1;
}
