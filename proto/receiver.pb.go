// Синтаксис Protocol Buffers v3

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v3.12.4
// source: receiver.proto

// Пакет для Go

package proto

import (
	empty "github.com/golang/protobuf/ptypes/empty"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Запрос на создание порта
type CreatePortRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PortNumber    uint32                 `protobuf:"varint,1,opt,name=port_number,json=portNumber,proto3" json:"port_number,omitempty"` // Номер TCP порта для прослушивания
	Protocol      string                 `protobuf:"bytes,2,opt,name=protocol,proto3" json:"protocol,omitempty"`                        // Протокол (ARNAVI, EGTS, NDTP)
	NatsTopic     string                 `protobuf:"bytes,3,opt,name=nats_topic,json=natsTopic,proto3" json:"nats_topic,omitempty"`     // Топик NATS для публикации данных
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreatePortRequest) Reset() {
	*x = CreatePortRequest{}
	mi := &file_receiver_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreatePortRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePortRequest) ProtoMessage() {}

func (x *CreatePortRequest) ProtoReflect() protoreflect.Message {
	mi := &file_receiver_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePortRequest.ProtoReflect.Descriptor instead.
func (*CreatePortRequest) Descriptor() ([]byte, []int) {
	return file_receiver_proto_rawDescGZIP(), []int{0}
}

func (x *CreatePortRequest) GetPortNumber() uint32 {
	if x != nil {
		return x.PortNumber
	}
	return 0
}

func (x *CreatePortRequest) GetProtocol() string {
	if x != nil {
		return x.Protocol
	}
	return ""
}

func (x *CreatePortRequest) GetNatsTopic() string {
	if x != nil {
		return x.NatsTopic
	}
	return ""
}

// Запрос на удаление порта
type DeletePortRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PortNumber    uint32                 `protobuf:"varint,1,opt,name=port_number,json=portNumber,proto3" json:"port_number,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeletePortRequest) Reset() {
	*x = DeletePortRequest{}
	mi := &file_receiver_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeletePortRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePortRequest) ProtoMessage() {}

func (x *DeletePortRequest) ProtoReflect() protoreflect.Message {
	mi := &file_receiver_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePortRequest.ProtoReflect.Descriptor instead.
func (*DeletePortRequest) Descriptor() ([]byte, []int) {
	return file_receiver_proto_rawDescGZIP(), []int{1}
}

func (x *DeletePortRequest) GetPortNumber() uint32 {
	if x != nil {
		return x.PortNumber
	}
	return 0
}

// Запрос на открытие порта
type OpenPortRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PortNumber    uint32                 `protobuf:"varint,1,opt,name=port_number,json=portNumber,proto3" json:"port_number,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OpenPortRequest) Reset() {
	*x = OpenPortRequest{}
	mi := &file_receiver_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OpenPortRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenPortRequest) ProtoMessage() {}

func (x *OpenPortRequest) ProtoReflect() protoreflect.Message {
	mi := &file_receiver_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenPortRequest.ProtoReflect.Descriptor instead.
func (*OpenPortRequest) Descriptor() ([]byte, []int) {
	return file_receiver_proto_rawDescGZIP(), []int{2}
}

func (x *OpenPortRequest) GetPortNumber() uint32 {
	if x != nil {
		return x.PortNumber
	}
	return 0
}

// Запрос на закрытие порта
type ClosePortRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PortNumber    uint32                 `protobuf:"varint,1,opt,name=port_number,json=portNumber,proto3" json:"port_number,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClosePortRequest) Reset() {
	*x = ClosePortRequest{}
	mi := &file_receiver_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClosePortRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClosePortRequest) ProtoMessage() {}

func (x *ClosePortRequest) ProtoReflect() protoreflect.Message {
	mi := &file_receiver_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClosePortRequest.ProtoReflect.Descriptor instead.
func (*ClosePortRequest) Descriptor() ([]byte, []int) {
	return file_receiver_proto_rawDescGZIP(), []int{3}
}

func (x *ClosePortRequest) GetPortNumber() uint32 {
	if x != nil {
		return x.PortNumber
	}
	return 0
}

// Ответ с информацией о порте
type PortResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PortNumber    uint32                 `protobuf:"varint,1,opt,name=port_number,json=portNumber,proto3" json:"port_number,omitempty"`
	Protocol      string                 `protobuf:"bytes,2,opt,name=protocol,proto3" json:"protocol,omitempty"`
	NatsTopic     string                 `protobuf:"bytes,3,opt,name=nats_topic,json=natsTopic,proto3" json:"nats_topic,omitempty"`
	Status        string                 `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`   // CREATED, OPEN, CLOSED, ERROR
	Message       string                 `protobuf:"bytes,5,opt,name=message,proto3" json:"message,omitempty"` // Дополнительное сообщение (например, об ошибке)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PortResponse) Reset() {
	*x = PortResponse{}
	mi := &file_receiver_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PortResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PortResponse) ProtoMessage() {}

func (x *PortResponse) ProtoReflect() protoreflect.Message {
	mi := &file_receiver_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PortResponse.ProtoReflect.Descriptor instead.
func (*PortResponse) Descriptor() ([]byte, []int) {
	return file_receiver_proto_rawDescGZIP(), []int{4}
}

func (x *PortResponse) GetPortNumber() uint32 {
	if x != nil {
		return x.PortNumber
	}
	return 0
}

func (x *PortResponse) GetProtocol() string {
	if x != nil {
		return x.Protocol
	}
	return ""
}

func (x *PortResponse) GetNatsTopic() string {
	if x != nil {
		return x.NatsTopic
	}
	return ""
}

func (x *PortResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *PortResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// Ответ со списком портов
type ListPortsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ports         []*PortResponse        `protobuf:"bytes,1,rep,name=ports,proto3" json:"ports,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListPortsResponse) Reset() {
	*x = ListPortsResponse{}
	mi := &file_receiver_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPortsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPortsResponse) ProtoMessage() {}

func (x *ListPortsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_receiver_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPortsResponse.ProtoReflect.Descriptor instead.
func (*ListPortsResponse) Descriptor() ([]byte, []int) {
	return file_receiver_proto_rawDescGZIP(), []int{5}
}

func (x *ListPortsResponse) GetPorts() []*PortResponse {
	if x != nil {
		return x.Ports
	}
	return nil
}

var File_receiver_proto protoreflect.FileDescriptor

const file_receiver_proto_rawDesc = "" +
	"\n" +
	"\x0ereceiver.proto\x12\breceiver\x1a\x1bgoogle/protobuf/empty.proto\"o\n" +
	"\x11CreatePortRequest\x12\x1f\n" +
	"\vport_number\x18\x01 \x01(\rR\n" +
	"portNumber\x12\x1a\n" +
	"\bprotocol\x18\x02 \x01(\tR\bprotocol\x12\x1d\n" +
	"\n" +
	"nats_topic\x18\x03 \x01(\tR\tnatsTopic\"4\n" +
	"\x11DeletePortRequest\x12\x1f\n" +
	"\vport_number\x18\x01 \x01(\rR\n" +
	"portNumber\"2\n" +
	"\x0fOpenPortRequest\x12\x1f\n" +
	"\vport_number\x18\x01 \x01(\rR\n" +
	"portNumber\"3\n" +
	"\x10ClosePortRequest\x12\x1f\n" +
	"\vport_number\x18\x01 \x01(\rR\n" +
	"portNumber\"\x9c\x01\n" +
	"\fPortResponse\x12\x1f\n" +
	"\vport_number\x18\x01 \x01(\rR\n" +
	"portNumber\x12\x1a\n" +
	"\bprotocol\x18\x02 \x01(\tR\bprotocol\x12\x1d\n" +
	"\n" +
	"nats_topic\x18\x03 \x01(\tR\tnatsTopic\x12\x16\n" +
	"\x06status\x18\x04 \x01(\tR\x06status\x12\x18\n" +
	"\amessage\x18\x05 \x01(\tR\amessage\"A\n" +
	"\x11ListPortsResponse\x12,\n" +
	"\x05ports\x18\x01 \x03(\v2\x16.receiver.PortResponseR\x05ports2\xd9\x02\n" +
	"\x0fReceiverService\x12A\n" +
	"\n" +
	"CreatePort\x12\x1b.receiver.CreatePortRequest\x1a\x16.receiver.PortResponse\x12A\n" +
	"\n" +
	"DeletePort\x12\x1b.receiver.DeletePortRequest\x1a\x16.google.protobuf.Empty\x12=\n" +
	"\bOpenPort\x12\x19.receiver.OpenPortRequest\x1a\x16.receiver.PortResponse\x12?\n" +
	"\tClosePort\x12\x1a.receiver.ClosePortRequest\x1a\x16.receiver.PortResponse\x12@\n" +
	"\tListPorts\x12\x16.google.protobuf.Empty\x1a\x1b.receiver.ListPortsResponseB*Z(github.com/rackov/NavControlSystem/protob\x06proto3"

var (
	file_receiver_proto_rawDescOnce sync.Once
	file_receiver_proto_rawDescData []byte
)

func file_receiver_proto_rawDescGZIP() []byte {
	file_receiver_proto_rawDescOnce.Do(func() {
		file_receiver_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_receiver_proto_rawDesc), len(file_receiver_proto_rawDesc)))
	})
	return file_receiver_proto_rawDescData
}

var file_receiver_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_receiver_proto_goTypes = []any{
	(*CreatePortRequest)(nil), // 0: receiver.CreatePortRequest
	(*DeletePortRequest)(nil), // 1: receiver.DeletePortRequest
	(*OpenPortRequest)(nil),   // 2: receiver.OpenPortRequest
	(*ClosePortRequest)(nil),  // 3: receiver.ClosePortRequest
	(*PortResponse)(nil),      // 4: receiver.PortResponse
	(*ListPortsResponse)(nil), // 5: receiver.ListPortsResponse
	(*empty.Empty)(nil),       // 6: google.protobuf.Empty
}
var file_receiver_proto_depIdxs = []int32{
	4, // 0: receiver.ListPortsResponse.ports:type_name -> receiver.PortResponse
	0, // 1: receiver.ReceiverService.CreatePort:input_type -> receiver.CreatePortRequest
	1, // 2: receiver.ReceiverService.DeletePort:input_type -> receiver.DeletePortRequest
	2, // 3: receiver.ReceiverService.OpenPort:input_type -> receiver.OpenPortRequest
	3, // 4: receiver.ReceiverService.ClosePort:input_type -> receiver.ClosePortRequest
	6, // 5: receiver.ReceiverService.ListPorts:input_type -> google.protobuf.Empty
	4, // 6: receiver.ReceiverService.CreatePort:output_type -> receiver.PortResponse
	6, // 7: receiver.ReceiverService.DeletePort:output_type -> google.protobuf.Empty
	4, // 8: receiver.ReceiverService.OpenPort:output_type -> receiver.PortResponse
	4, // 9: receiver.ReceiverService.ClosePort:output_type -> receiver.PortResponse
	5, // 10: receiver.ReceiverService.ListPorts:output_type -> receiver.ListPortsResponse
	6, // [6:11] is the sub-list for method output_type
	1, // [1:6] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_receiver_proto_init() }
func file_receiver_proto_init() {
	if File_receiver_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_receiver_proto_rawDesc), len(file_receiver_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_receiver_proto_goTypes,
		DependencyIndexes: file_receiver_proto_depIdxs,
		MessageInfos:      file_receiver_proto_msgTypes,
	}.Build()
	File_receiver_proto = out.File
	file_receiver_proto_goTypes = nil
	file_receiver_proto_depIdxs = nil
}
